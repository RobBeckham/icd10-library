library lib_DX10()
 %version 1.1.001 08/14/2015
 bgcolor is x
 bgcolor = "white"
 %define table_wbgcolor "width='100%'  border='1' cellspacing='0' cellpadding='0' bgcolor='" + bgcolor + "'"
 %define table_nobgcolor "width='100%'  border='1' cellspacing='0' cellpadding='0'"
 %define row_color1 "bgcolor='LightSkyBlue'"
 %define row_color2 "bgcolor='White'"
 %define row_color3 "bgcolor='PaleGreen'"
 %define row_color4 "bgcolor='LemonChiffon'" 
 %define col_color_multi "bgcolor='LightGrey'"
 on load do: 
  %global o_user, o_pass, o_ds, o_db, ICD10_Table, ICD9_Table 
  o_user      is x
  o_pass      is x
  o_ds        is x
  o_db        is x
  ICD10_Table is x
  ICD9_Table  is x
 %include inc_DX10
 
dynamic function Set_Sql(user, pass, host, db, icd10, icd9) is null 
 user  is x
 pass  is x
 host  is x
 db    is x
 icd10 is x
 icd9  is x
 o_user = user
 o_pass = pass
 o_ds = host
 o_db = db
 ICD10_TABLE = icd10
 ICD9_TABLE = icd9
end set_sql 
 
dynamic function DX_Lookup(selection[],10DOTTED,9DOTTED) is null
 10DOTTED         is x
 9DOTTED          is x
 search_field     is x
 rc				  is i
 last_query       is x
 skip             is b
 query_any        is x 
 query_txt		  is x
 query_txt_arr[]  is x
 cnt_query		  is i
 dsn		      is x
 o_sql		      is x		
 db			      is i
 sql_tpl	      is x
 result[]	      is x
 all_results[]    is x
 CodeID		      is x
 FileData[]	      is x 
 selected[]       is x
 return_btn       is x 
 selection[]      is x
 index            is i
 UniqID           is x
 ICD_Code         is x
 ICD_Code_DotNt   is x
 ICD_Description  is x
 ICD_Code2        is x
 ICD_Code_DotNt2  is x
 ICD_Description2 is x
 DSM_4_Axis       is x
 Approximate      is x
 NoMap            is x
 Combination      is x
 Scenario         is x
 ChoiceList       is x
 DX_Cat           is x
 TermSearch       is x
 EffDt            is d
 EndDt            is d
 if 10DOTTED !dp
  10DOTTED = "Y" 
 endif
 if 9DOTTED !dp
  9DOTTED = "Y"
 endif 

 $looplimit = 0
 $clear(selected[],search_field,all_results[])
 rc = $loadlib(db, "LIB-freetds")
 dsn = o_user + ":" + o_pass + ":" + o_ds + ":" + o_db
 db:setDSN(dsn)
 $submitopt("off", "Search")
 $cancelopt("off", "Cancel")
 do until $endbutton = "CANCEL"
  $form($scriptid)
   $stylesheet("../cmhcbuilocal/styles/Buttons.css", "R")
   $text("Enter DX Search Terms, either code or description. Multiple items can be searched for if they are separated by a coma","siginfo")$textbox(query_any,,50,60)   
   $br()$text("Example: bipolar,schiz","inst")
'   if o_sql dp
'    $br()$text(o_sql,"inst")
 '  endif	
   $br(3)  
   if all_results[1] dp
    $navbutton(return_btn, "Use Selection") 
    index = 0
  	$table($funcname)
     $row()
	  $col()$text($maxarray(all_results[]))
      $col()$text("ICD 10 Code")
'      $col()$text("ICD 10 Code Dot Notation")
      $col()$text("ICD 10 Description")
'      $col()$text("ICD 9 Code")
      $col()$text("ICD 9 Code Dot Notation")
      $col()$text("ICD 9 Description")   
      $col()$text("DSM 4 Axis")
'      $col()$text("Approximate")
'      $col()$text("NoMap")
'      $col()$text("Combination")
'      $col()$text("Scenario")
'      $col()$text("ChoiceList")		
      $col()$text("DX Cat")        
	  $row()
	   $col()$tag("<hr/>")
	   $col()$tag("<hr/>")
'	   $col()$tag("<hr/>")
	   $col()$tag("<hr/>")
'	   $col()$tag("<hr/>")
	   $col()$tag("<hr/>")
	   $col()$tag("<hr/>")
	   $col()$tag("<hr/>")
'	   $col()$tag("<hr/>")
'	   $col()$tag("<hr/>")
'	   $col()$tag("<hr/>")
'	   $col()$tag("<hr/>")
'	   $col()$tag("<hr/>")
       $col()$tag("<hr/>")
	 do while index++ < $maxarray(all_results[])
	  (void)$parsem(all_results[index],1,"|",UniqID,ICD_Code,ICD_Code_DotNt,ICD_Description,ICD_Code2,ICD_Code_DotNt2,ICD_Description2,DSM_4_Axis,Approximate,NoMap,Combination,Scenario,ChoiceList,DX_Cat,TermSearch,EffDt,EndDt)
	  if $mod(index,2) = 0
	   $row()
	  else
	   $row(,"bgcolor='99ccff'")
	  endif 
	   $col()$checkbox(selected[index],,UniqID)
       if 10DOTTED = "Y"
	    $col()$text(ICD_Code_DotNt)
	   else
	    $col()$text(ICD_Code)
       endif	

	   $col()$text(ICD_Description)
	   if 9DOTTED = "Y"
	    $col()$text(ICD_Code_DotNt2)
	   else
	    $col()$text(ICD_Code2)
	   endif	
	   $col()$text(ICD_Description2)
	   $col()$text(DSM_4_Axis)
'	   $col()$text(Approximate)
'	   $col()$text(NoMap)
'	   $col()$text(Combination)
'	   $col()$text(Scenario)
'	   $col()$text(ChoiceList)
      $col()$text(DX_Cat)
	 enddo
	$endtable($funcname)
   else
  	$text("No Results Yet")  
   endif  
  $sendform($funcname)
  select $endbutton
   case "CANCEL" return
   case "SUBMIT" $clear(query_txt_arr[])
                 if $len(query_any) > 1
			      query_txt = query_any
			      $parsem(query_txt,1,",",query_txt_arr[])
				 else
                  {"lib_txaceUI"}msgbox("Please enter a longer search term",1,"Alert","Ok")									   											
			     endif	
                 skip = 0
				 cnt_query = $maxarray(query_txt_arr[])
				 if last_query dp and last_query = query_txt
                  cnt_query = $maxarray(query_txt_arr[])				   
				  skip = 1
				 endif
				 if cnt_query = 0
				  skip = 1
				 endif		   	
	             index = 1	
	             if skip = 0
				  $clear(all_results[],result[])
                  o_sql = "select * from " + ICD10_table + " where [TermSearch] like '%" + query_txt_arr[index] + "%'" 
                  do while index++ < cnt_query	 		 								  
                   o_sql += " and [TermSearch] like '%" + query_txt_arr[index] + "%'" 								 						  						  								  								  
                  enddo				   
				  o_sql += " and EffDt <= '" + $today + "' and (EndDt > '" + $today + "' or EndDt is null)"
                  rc = db:q(o_sql, result[])
                  (void)$arrcopy(result[],all_results[])								 
                  last_query = query_txt 				   
                 endif
   case other $allowupdate(selection[])
	          index = 0
	          do while index++ < $maxarray(all_results[])
	           if selected[index] dp   
	            (void)$arrpush(selection[],all_results[index])
				(void)$sortu(selection[])
				(void)$arrcompress(selection[])
	           endif
	          enddo
			  return  
  endselect
 enddo
end DX_Lookup 

function 10_Desc_lookup(UniqID) is x
 UniqID      is x
 o_sql       is x
 results     is x
 db			 is i 
 rc          is i
 dsn         is x
 rc = $loadlib(db, "LIB-freetds")
 dsn = o_user + ":" + o_pass + ":" + o_ds + ":" + o_db
 db:setDSN(dsn)
 o_sql = "select [ICD-10_Description] from " + ICD10_table + " where [UniqID] = '" + uniqid + "'" 
 rc = db:q(o_sql, results)
 10_Desc_Lookup = results
end 10_Desc_Lookup

function 9_Desc_lookup(UniqID) is x
 UniqID      is x
 o_sql       is x
 results     is x
 db			 is i 
 rc          is i
 dsn         is x
 rc = $loadlib(db, "LIB-freetds")
 dsn = o_user + ":" + o_pass + ":" + o_ds + ":" + o_db
 db:setDSN(dsn)
 o_sql = "select [ICD-9_Description] from " + ICD10_table + " where [UniqID] = '" + uniqid + "'" 
 rc = db:q(o_sql, results)
 9_Desc_Lookup = results
end 9_Desc_Lookup

function DX_Uniq_Query(UniqID) is x
 UniqID  is x
 o_sql   is x
 results is x
 db		 is i 
 rc      is i
 dsn     is x
 rc = $loadlib(db, "LIB-freetds")
 dsn = o_user + ":" + o_pass + ":" + o_ds + ":" + o_db
 db:setDSN(dsn)
 o_sql = "select * from " + ICD10_table + " where [UniqID] = '" + uniqid + "'" 
 rc = db:q(o_sql, results)
 DX_Uniq_Query = results
end DX_Uniq_Query

function PreviousGaf() is x
 rc            is i
 'c.dsmiiir     is h
 'c.dxaxvc      is x
 rc = $dbread(2,$regid,c.dx10.rh,c.dx10.a5.gaf)
 if c.dx10.rh dp
  if c.dx10.a5.gaf dp
   PreviousGaf = c.dx10.a5.gaf
  else
   $clear(PreviousGaf)
  endif 
 else
  'rc = $dbread(2,$regid,c.dsmiiir,c.dxaxvc) 
  'if c.dxaxvc dp
   'PreviousGaf = c.dxaxvc
  'else
   $clear(PreviousGaf)
  'endif   
 endif 
end PreviousGaf

function NoDX_Lookup(axis) is x
 axis    is x
 rc      is i
 o_sql   is x
 results is x
 db		 is i 
 dsn     is x
 rc = $loadlib(db, "LIB-freetds")
 dsn = o_user + ":" + o_pass + ":" + o_ds + ":" + o_db
 db:setDSN(dsn)
 select axis
  case "1" o_sql = "select *  FROM " + ICD10_table + " where [ICD-10_Code] = 'Z0389' and [DSM-4_Axis] = '1' and EffDt <= '" + $today + "' and (EndDt > '" + $today + "' or EndDt is null)"
  case "2" o_sql = "select *  FROM " + ICD10_table + " where [ICD-10_Code] = 'Z0389' and [DSM-4_Axis] = '2' and EffDt <= '" + $today + "' and (EndDt > '" + $today + "' or EndDt is null)"
  case "3" o_sql = "select *  FROM " + ICD10_table + " where [ICD-10_Code] = 'None' and [DSM-4_Axis] = '3' and EffDt <= '" + $today + "' and (EndDt > '" + $today + "' or EndDt is null)"
  case other return
 endselect 
 rc = db:q(o_sql, results)
 NoDX_Lookup = results  
end NoDX_Lookup

function getclientdx(client_id, as_of_date, dx_rec, dx_date, dx_time, dx_primary, dx_reason, dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_batchdt,dx_cat[],DX10_axis1[],DX9_axis1[],DX10_axis2[],DX9_axis2[],DX10_axis3[],DX9_axis3[]) is i
 client_id    is x
 as_of_date   is d
 dx_rec       is uid
 dx_date      is d
 dx_time      is t
 dx_primary   is x
 dx_reason    is x
 dx10_code[]  is x
 dx_rank[]    is x
 dx_axis[]    is x
 dx9_code[]   is x
 dx_batchdt   is d
 dx_cat[]     is x
 DX10_axis1[] is x
 DX9_axis1[]  is x
 DX10_axis2[] is x
 DX9_axis2[]  is x
 DX10_axis3[] is x
 DX9_axis3[]  is x
 
 if as_of_date !dp
  as_of_date = $today
 endif
 $clear(dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_rec, dx_date, dx_time, dx_primary, dx_reason, dx_batchdt,dx_cat[],DX10_axis1[],DX9_axis1[],DX10_axis2[],DX9_axis2[],DX10_axis3[],DX9_axis3[])

 $dblock()
 getClientDx = $dbread(2,client_id,dx10_dstlist)
 do while c.dx10.dt > as_of_date
  getClientDx = $dbreadnextdst(2,client_id,dx10_dstlist) 
 enddo
 dx_batchdt = c.dx10.caredt
 getUnbatchCltDx = fillclientdx(dx_rec, dx_date, dx_time, dx_primary, dx_reason, 
    dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_batchdt,dx_cat[],
    DX10_axis1[],DX9_axis1[],DX10_axis2[],DX9_axis2[],DX10_axis3[],DX9_axis3[])

 $dbunlock()
end getclientdx

function getUnbatchCltDx(client_id, as_of_date, dx_rec, dx_date, dx_time, dx_primary, dx_reason, 
   dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_batchdt,dx_cat[],DX10_axis1[],DX9_axis1[],DX10_axis2[],DX9_axis2[],DX10_axis3[],DX9_axis3[]) is i
 client_id    is x
 as_of_date   is d
 dx_rec       is uid
 dx_date      is d
 dx_time      is t
 dx_primary   is x
 dx_reason    is x
 dx10_code[]  is x
 dx_rank[]    is x
 dx_axis[]    is x
 dx9_code[]   is x
 dx_batchdt   is d
 dx_cat[]     is x
 DX10_axis1[] is x
 DX9_axis1[]  is x
 DX10_axis2[] is x
 DX9_axis2[]  is x
 DX10_axis3[] is x
 DX9_axis3[]  is x 
 
 if as_of_date !dp
  as_of_date = $today
 endif

 $clear(dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_rec, dx_date, dx_time, dx_primary, dx_reason, dx_batchdt,dx_cat[],DX10_axis1[],DX9_axis1[],DX10_axis2[],DX9_axis2[],DX10_axis3[],DX9_axis3[])


 getUnbatchCltDx = getclientdx(client_id, as_of_date, dx_rec, dx_date, dx_time, dx_primary, dx_reason, 
   dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_batchdt,dx_cat[], DX10_axis1[],DX9_axis1[],DX10_axis2[],DX9_axis2[],DX10_axis3[],DX9_axis3[])

 ' we only want unbatched records
 if dx_batchdt !dp then
   ' we want to find the earliest unbatched layer
   $dblock()
   getUnbatchCltDx = $dbreadnextdst(2, client_id, dx10_dstlist)
   do while c.dx10.caredt !dp and getUnbatchCltDx < 2
      getUnbatchCltDx = fillclientdx(dx_rec, dx_date, dx_time, dx_primary, dx_reason, 
         dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_batchdt,dx_cat[],
         DX10_axis1[],DX9_axis1[],DX10_axis2[],DX9_axis2[],DX10_axis3[],DX9_axis3[])

      getUnbatchCltDx = $dbreadnextdst(2, client_id, dx10_dstlist)
   enddo
 else 
   ' return nothing if everything is batched
   $clear(dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_rec, dx_date, dx_time, dx_primary, dx_reason, dx_batchdt,dx_cat[],axis1[],axis2[],axis3[])

 endif 
 $dbunlock()

end getUnbatchCltDx

private dynamic function fillclientdx(dx_rec, dx_date, dx_time, dx_primary, dx_reason, dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_batchdt, dx_cat[], DX10_axis1[],DX9_axis1[],DX10_axis2[],DX9_axis2[],DX10_axis3[],DX9_axis3[]) is i 
 dx_rec       is uid
 dx_date      is d
 dx_time      is t
 dx_primary   is x
 dx_reason    is x
 dx10_code[]  is x
 dx_rank[]    is x
 dx_axis[]    is x
 dx9_code[]   is x
 dx_batchdt   is d
 dx_cat[]     is x
 DX10_axis1[] is x
 DX9_axis1[]  is x
 DX10_axis2[] is x
 DX9_axis2[]  is x
 DX10_axis3[] is x
 DX9_axis3[]  is x
 index        is i   

 $allowupdate(dx10_code[], dx_rank[], dx_axis[], dx9_code[], dx_rec, dx_date, dx_time, dx_primary, dx_reason, dx_batchdt,dx_cat[],DX10_axis1[],DX9_axis1[],DX10_axis2[],DX9_axis2[],DX10_axis3[],DX9_axis3[])

 'dx_rec = $castn(c.dx10.rh)
 dx_rec = c.dx10.rh[uid]
 dx_date = c.dx10.dt
 dx_time = c.dx10.time
 dx_primary = c.dx10.pimary.ax
 dx_reason = c.dx10.reason  
 dx_batchdt = c.dx10.caredt

 if c.dx10.uniq.1 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.1)
  (void)$arrpush(dx9_code[],c.dx10.icd9.1)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.1)  
  (void)$arrpush(dx_axis[],c.dx10.legax.1)
  (void)$arrpush(dx_cat[],c.dx10.dxcat.1)
 endif
 if c.dx10.uniq.2 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.2)
  (void)$arrpush(dx9_code[],c.dx10.icd9.2)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.2)  
  (void)$arrpush(dx_axis[],c.dx10.legax.2) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.2)  
 endif
 if c.dx10.uniq.3 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.3)
  (void)$arrpush(dx9_code[],c.dx10.icd9.3)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.3)  
  (void)$arrpush(dx_axis[],c.dx10.legax.3)
  (void)$arrpush(dx_cat[],c.dx10.dxcat.3)
 endif
 if c.dx10.uniq.4 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.4)
  (void)$arrpush(dx9_code[],c.dx10.icd9.4)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.4)  
  (void)$arrpush(dx_axis[],c.dx10.legax.4) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.4)
 endif
 if c.dx10.uniq.5 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.5)
  (void)$arrpush(dx9_code[],c.dx10.icd9.5)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.5)  
  (void)$arrpush(dx_axis[],c.dx10.legax.5) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.5)  
 endif
 if c.dx10.uniq.6 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.6)
  (void)$arrpush(dx9_code[],c.dx10.icd9.6)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.6)  
  (void)$arrpush(dx_axis[],c.dx10.legax.6) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.6)  
 endif
 if c.dx10.uniq.7 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.7)
  (void)$arrpush(dx9_code[],c.dx10.icd9.7)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.7)  
  (void)$arrpush(dx_axis[],c.dx10.legax.7) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.7)  
 endif
 if c.dx10.uniq.8 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.8)
  (void)$arrpush(dx9_code[],c.dx10.icd9.8)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.8)  
  (void)$arrpush(dx_axis[],c.dx10.legax.8) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.8)  
 endif
 if c.dx10.uniq.9 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.9)
  (void)$arrpush(dx9_code[],c.dx10.icd9.9)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.9)  
  (void)$arrpush(dx_axis[],c.dx10.legax.9) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.9)  
 endif
 if c.dx10.uniq.10 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.10)
  (void)$arrpush(dx9_code[],c.dx10.icd9.10)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.10)  
  (void)$arrpush(dx_axis[],c.dx10.legax.10) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.10)  
 endif
 if c.dx10.uniq.11 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.11)
  (void)$arrpush(dx9_code[],c.dx10.icd9.11)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.11)  
  (void)$arrpush(dx_axis[],c.dx10.legax.11) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.11)  
 endif
 if c.dx10.uniq.12 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.12)
  (void)$arrpush(dx9_code[],c.dx10.icd9.12)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.12)  
  (void)$arrpush(dx_axis[],c.dx10.legax.12) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.12)  
 endif
 if c.dx10.uniq.13 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.13)
  (void)$arrpush(dx9_code[],c.dx10.icd9.13)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.13)  
  (void)$arrpush(dx_axis[],c.dx10.legax.13) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.13)  
 endif
 if c.dx10.uniq.14 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.14)
  (void)$arrpush(dx9_code[],c.dx10.icd9.14)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.14)  
  (void)$arrpush(dx_axis[],c.dx10.legax.14) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.14)  
 endif
 if c.dx10.uniq.15 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.15)
  (void)$arrpush(dx9_code[],c.dx10.icd9.15)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.15)  
  (void)$arrpush(dx_axis[],c.dx10.legax.15) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.15)  
 endif
 if c.dx10.uniq.16 dp
  (void)$arrpush(dx10_code[],c.dx10.icd10.16)
  (void)$arrpush(dx9_code[],c.dx10.icd9.16)
  (void)$arrpush(dx_rank[],c.dx10.dxrank.16)  
  (void)$arrpush(dx_axis[],c.dx10.legax.16) 
  (void)$arrpush(dx_cat[],c.dx10.dxcat.16)  
 endif
 index = 0
 do while index++ < $maxarray(dx10_code[])
  select dx_axis[index]
   case "1" (void)$arrpush(DX10_axis1[],dx10_code[index])
            (void)$arrpush(DX9_axis1[],dx9_code[index])
   case "2" (void)$arrpush(DX10_axis2[],dx10_code[index])
            (void)$arrpush(DX9_axis2[],dx9_code[index])   
   case "3" (void)$arrpush(DX10_axis3[],dx10_code[index])
            (void)$arrpush(DX9_axis3[],dx9_code[index])   
  endselect 
 enddo 
end fillclientdx  

'To be removed, required by CARE-SUBMIT script
function sortDxByV4Axis(dx_code[], dx_rank[], dx_axis[], stripdots, axis1[], axis2[], axis3[]) is x
 dx_code[] is x
 dx_rank[] is x
 dx_axis[] is x
 stripdots is X
 axis1[]   is x
 axis2[]   is x
 axis3[]   is x
 rc        is i
 index     is i
 delim_str is x
 rc = $sort(dx_rank[],,dx_code[],dx_axis[])
 $clear(axis1[],axis2[],axis3[])
 index = 0
 do while index++ < $maxarray(dx_code[])
  select dx_axis[index]
   case "1" (void)$arrpush(axis1[],dx_code[index])
   case "2" (void)$arrpush(axis2[],dx_code[index])
   case "3" (void)$arrpush(axis3[],dx_code[index])
  endselect
 enddo
 $allowupdate(axis1[],axis2[],axis3[])
 index = 0
 do while index++ < $maxarray(axis1[])
  delim_str += axis1[index] + "|"
 enddo
 index = 0
 do while index++ < $maxarray(axis2[])
  delim_str += axis2[index] + "|"
 enddo
 index = 0
 do while index++ < $maxarray(axis3[])
  delim_str += axis3[index] + "|"
 enddo
 sortDxByV4Axis = delim_str
end sortDxByV4Axis

public dynamic function getClientAxis4(client_id, as_of_date, dx_rec, dx_date, dx_4_a, dx_4_b, dx_4_c, dx_4_d, dx_4_e, dx_4_f, dx_4_g, dx_4_h, dx_4_i, dx_4_j) is i
 client_id  is x
 as_of_date is d
 dx_rec     is uid
 dx_date    is d

 dx_4_a     is x
 dx_4_b     is x
 dx_4_c     is x
 dx_4_d     is x
 dx_4_e     is x
 dx_4_f     is x
 dx_4_g     is x
 dx_4_h     is x
 dx_4_i     is x
 dx_4_j     is x

 $clear(dx_4_a, dx_4_b, dx_4_c, dx_4_d, dx_4_e, dx_4_f, dx_4_g, dx_4_h, dx_4_i, dx_4_j)
 $allowupdate(dx_4_a, dx_4_b, dx_4_c, dx_4_d, dx_4_e, dx_4_f, dx_4_g, dx_4_h, dx_4_i, dx_4_j)
 if dx_rec dp then
    getClientAxis4 = $dbreaduid(dx_rec, 2, client_id, dx10_dstlist)
 else 
    if as_of_date !dp then
       as_of_date = $today
    endif

    getClientAxis4 = $dbread(2,client_id,dx10_dstlist)
   do while c.dx10.dt > as_of_date
    getClientAxis4 = $dbreadnextdst(2,client_id,dx10_dstlist) 
   enddo 
 endif

 dx_4_a  = c.dx10.a4.supgrp
 dx_4_b  = c.dx10.a4.socenv
 dx_4_c  = c.dx10.a4.edu
 dx_4_d  = c.dx10.a4.occ
 dx_4_e  = c.dx10.a4.housng
 dx_4_f  = c.dx10.a4.eco
 dx_4_g  = c.dx10.a4.health
 dx_4_h  = c.dx10.a4.legal
 dx_4_i  = c.dx10.a4.psyenv
 dx_4_j  = c.dx10.a4.none
end getClientAxis4

function getClientGaf(client_id, as_of_date, dx_rec, dx_date, dx_gaf_cur, dx_gaf_pre, dx_abl_cur, dx_abl_pot) is i
 client_id  is x
 as_of_date is d
 dx_rec     is uid
 dx_date    is d
 dx_gaf_cur is b
 dx_gaf_pre is b
 dx_abl_cur is x
 dx_abl_pot is x

 $allowupdate(dx_gaf_cur, dx_gaf_pre)

 if dx_rec dp then
    getClientGaf = $dbreaduid(dx_rec, 2, client_id, dx10_dstlist)
 else
   if as_of_date !dp
    as_of_date = $today
   endif
   getClientGaf = $dbread(2,client_id,dx10_dstlist)
   do while c.dx10.dt > as_of_date
    getClientGaf = $dbreadnextdst(2,client_id,dx10_dstlist) 
   enddo 
 endif
 dx_date = c.dx10.dt
 dx_gaf_cur = c.dx10.a5.gaf
 dx_abl_cur = c.dx10.curr.abl
 dx_abl_pot = c.dx10.pot.abl
'HFC:Not sending previous, otherwise uncomment below
 $clear(dx_gaf_pre)
' (void)$dbreadnextdst(2,client_id,dx10_dstlist) 
' dx_gaf_pre = c.dx10.a5.gaf  
end getClientGaf

function getClientAamd(client_id, as_of_date, dx_rec, dx_date, dx_aamd_date, dx_aamd_1, dx_aamd_2, dx_aamd_3, dx_aamd_gen, dx_aamd_anom, dx_aamd_sens, dx_aamd_prec, dx_aamd_conv, dx_aamd_phys, dx_aamd_moto, dx_aamd_mloc, dx_aamd_msev) is i
 client_id    is x
 as_of_date   is d
 dx_rec       is uid
 dx_date      is d
 dx_aamd_date is d
 dx_aamd_1    is x
 dx_aamd_2    is x
 dx_aamd_3    is x
 dx_aamd_gen  is x
 dx_aamd_anom is x
 dx_aamd_sens is x
 dx_aamd_prec is x
 dx_aamd_conv is x
 dx_aamd_phys is x
 dx_aamd_moto is x
 dx_aamd_mloc is x
 dx_aamd_msev is x

 if dx_rec dp then
    getClientAamd = $dbreaduid(dx_rec, 2, client_id, dx10_dstlist)
 else
   if as_of_date !dp
    as_of_date = $today
   endif
   getClientAamd = $dbread(2,client_id,dx10_dstlist)
   do while c.dx10.dt > as_of_date
    getClientAamd = $dbreadnextdst(2,client_id,dx10_dstlist) 
   enddo 
 endif

 'variable assignments
 'not implemented

 $allowupdate(dx_date, dx_aamd_date, dx_aamd_1, dx_aamd_2, dx_aamd_3, dx_aamd_gen, dx_aamd_anom, dx_aamd_sens, dx_aamd_prec, dx_aamd_conv, dx_aamd_phys, dx_aamd_moto, dx_aamd_mloc, dx_aamd_msev) 
end getClientAamd 

function getClientIq(client_id, as_of_date, dx_rec, dx_date, dx_iq, dx_iq_test, dx_iq_date, dx_sq, dx_sq_test, dx_sq_date) is i
 client_id  is x
 as_of_date is d
 dx_rec     is uid
 dx_date    is d
 dx_iq      is x
 dx_iq_test is x
 dx_iq_date is d
 dx_sq      is x
 dx_sq_test is x
 dx_sq_date is d

 if dx_rec dp then
    getClientIq = $dbreaduid(dx_rec, 2, client_id, dx10_dstlist)
 else
   if as_of_date !dp
    as_of_date = $today
   endif
   getClientIq = $dbread(2,client_id,dx10_dstlist)
   do while c.dx10.dt > as_of_date
    getClientIq = $dbreadnextdst(2,client_id,dx10_dstlist) 
   enddo 
 endif

 'variable assignments
 'not implemented

 $allowupdate(dx_date, dx_iq, dx_iq_test, dx_iq_date, dx_sq, dx_sq_test, dx_sq_date)

 $clear(dx_date, dx_iq, dx_iq_test, dx_iq_date, dx_sq, dx_sq_test, dx_sq_date)
end getClientIq

public dynamic function MarkAsBatched(client_id, batchdate, record) is i

client_id   is x
batchdate   is d
record      is uid

if record !dp then
   MarkAsBatched = 99
   return
endif
c.dx10.caredt = batchdate
$dblock()
MarkAsBatched = $dbupdateuid(record, 2, client_id, c.dx10.rh, c.dx10.caredt)
$dbunlock()

end MarkAsBatched

function DX_9Code_Query(diag_code,legacy_axis,9DOTTED,results[],text) is null
 diag_code   is x
 legacy_axis is x
 9DOTTED     is x
 text is x
 o_sql       is x
 results[]   is x
 db		     is i 
 rc          is i
 dsn         is x
 index       is i
 if 9DOTTED !dp
  9DOTTED = "Y"
 else
  9DOTTED = $uc(9DOTTED)
 endif
 if legacy_axis !dp
  legacy_axis = "1"
 endif
' rc = $loadlib(db, "LIB-freetds")
 dsn = o_user + ":" + o_pass + ":" + o_ds + ":" + o_db
 {"LIB-freetds"}setDSN(dsn)
 if 9DOTTED = "Y"
  if text dp
   o_sql = "select [UniqID] from " + ICD9_table + " where [ICD-9_Code_DotNotation] = '" + diag_code + "' and [DSM-4_Axis] = '" + legacy_axis + "' and [ICD-10_Description] like '" + text + "'"
  else
   o_sql = "select [UniqID] from " + ICD9_table + " where [ICD-9_Code_DotNotation] = '" + diag_code + "' and [DSM-4_Axis] = '" + legacy_axis + "'"
  endif 
 else
  if text dp
   o_sql = "select [UniqID] from " + ICD9_table + " where [ICD-9_Code] = '" + diag_code + "' and [DSM-4_Axis] = '" + legacy_axis + "' and [ICD-10_Description] like '" + text + "'"
  else
   o_sql = "select [UniqID] from " + ICD9_table + " where [ICD-9_Code] = '" + diag_code + "' and [DSM-4_Axis] = '" + legacy_axis + "'" 
  endif 
 endif
 rc = {"LIB-freetds"}q(o_sql, results[])
 index = 0
 do while index++ < $maxarray(results[])
  results[index] = $replace("|","",results[index])
 enddo
 $allowupdate(results[])
end DX_9Code_Query

function DX_Uniq_Query9(UniqID) is x
 UniqID  is x
 o_sql   is x
 results is x
 db              is i
 rc      is i
 dsn     is x
 rc = $loadlib(db, "LIB-freetds")
 dsn = o_user + ":" + o_pass + ":" + o_ds + ":" + o_db
 db:setDSN(dsn)
 o_sql = "select * from " + ICD9_table + " where [UniqID] = '" + uniqid + "'"
 rc = db:q(o_sql, results)
 DX_Uniq_Query9 = results
end DX_Uniq_Query9

function DX_10Code_Query(diag_code,legacy_axis,9DOTTED,results[]) is null
 diag_code   is x
 legacy_axis is x
 9DOTTED     is x
 o_sql       is x
 results[]   is x
 db		     is i 
 rc          is i
 dsn         is x
 index       is i
 if 9DOTTED !dp
  9DOTTED = "Y"
 else
  9DOTTED = $uc(9DOTTED)
 endif
 if legacy_axis !dp
  legacy_axis = "1"
 endif
' rc = $loadlib(db, "LIB-freetds")
 dsn = o_user + ":" + o_pass + ":" + o_ds + ":" + o_db
 {"LIB-freetds"}setDSN(dsn)
 if 9DOTTED = "Y"
  o_sql = "select [UniqID] from " + ICD10_table + " where [ICD-9_Code_DotNotation] = '" + diag_code + "' and [DSM-4_Axis] = '" + legacy_axis + "'"
 else
  o_sql = "select [UniqID] from " + ICD10_table + " where [ICD-9_Code] = '" + diag_code + "' and [DSM-4_Axis] = '" + legacy_axis + "'" 
 endif
 rc = {"LIB-freetds"}q(o_sql, results[])
 index = 0
 do while index++ < $maxarray(results[])
  results[index] = $replace("|","",results[index])
 enddo
 $allowupdate(results[])
end DX_10Code_Query

function DX_Code_Query(UniqID) is x
 UniqID  is x
 o_sql   is x
 results is x
 db		 is i 
 rc      is i
 dsn     is x
 rc = $loadlib(db, "LIB-freetds")
 dsn = o_user + ":" + o_pass + ":" + o_ds + ":" + o_db
 db:setDSN(dsn)
 o_sql = "select [ICD-10_Code] from " + ICD10_table + " where [UniqID] = '" + uniqid + "'" 
 rc = db:q(o_sql, results)
 results = $replace("|","",results)
 DX_Code_Query = results
end DX_Code_Query

